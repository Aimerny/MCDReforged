name: CI for MCDR Pull Requests

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    name: Test with python ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

  assemble:
    runs-on: ubuntu-latest
    name: Assemble a dev source compressed file
    needs: test

    steps:
    - uses: actions/checkout@v2
    - name: Create Dev Build
      run: |
        mkdir MCDReforged
        mv * MCDReforged || true
        cd MCDReforged
        rm -rf .git tests
        rm -f .gitignore logo_long.png setup.py MANIFEST.in *.md
        mkdir server
        mkdir config
        rm -f plugins/*
        rm -rf docs docs_prev
        cd ..
        zip -r MCDReforged-dev.zip ./MCDReforged

    - uses: actions/upload-artifact@v2
      with:
        name: MCDReforged dev source for ${{ github.sha }}
        path: MCDReforged-dev.zip
